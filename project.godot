; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Task",
"class": "AlwaysFail",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/AlwaysFail.gd"
}, {
"base": "Task",
"class": "AlwaysSucceed",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/AlwaysSucceed.gd"
}, {
"base": "Task",
"class": "BehaviorTree",
"language": "GDScript",
"path": "res://src/ai/BehaviorTree.gd"
}, {
"base": "Task",
"class": "Call",
"language": "GDScript",
"path": "res://Tests/Leaves/Call.gd"
}, {
"base": "Leaf",
"class": "CallMyAgent",
"language": "GDScript",
"path": "res://BehaviorTree/Leaves/CallMyAgent.gd"
}, {
"base": "Task",
"class": "DynamicGuardSelector",
"language": "GDScript",
"path": "res://BehaviorTree/Composites/DynamicGuardSelector.gd"
}, {
"base": "Task",
"class": "Fail",
"language": "GDScript",
"path": "res://Tests/Leaves/Fail.gd"
}, {
"base": "StatusSequence",
"class": "FtoS",
"language": "GDScript",
"path": "res://Tests/Leaves/f-s.gd"
}, {
"base": "Task",
"class": "Invert",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/Invert.gd"
}, {
"base": "Task",
"class": "Leaf",
"language": "GDScript",
"path": "res://BehaviorTree/Leaf.gd"
}, {
"base": "Task",
"class": "Limit",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/Limit.gd"
}, {
"base": "Task",
"class": "LimitCheck",
"language": "GDScript",
"path": "res://Tests/Leaves/LimitCheck.gd"
}, {
"base": "Task",
"class": "Parallel",
"language": "GDScript",
"path": "res://BehaviorTree/Composites/Parallel.gd"
}, {
"base": "Task",
"class": "RandomSelector",
"language": "GDScript",
"path": "res://BehaviorTree/Composites/RandomSelector.gd"
}, {
"base": "Task",
"class": "RandomSequence",
"language": "GDScript",
"path": "res://BehaviorTree/Composites/RandomSequence.gd"
}, {
"base": "Task",
"class": "Repeat",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/Repeat.gd"
}, {
"base": "Task",
"class": "RepeatChild",
"language": "GDScript",
"path": "res://Tests/Leaves/RepeatChild.gd"
}, {
"base": "Task",
"class": "Selector",
"language": "GDScript",
"path": "res://BehaviorTree/Composites/Selector.gd"
}, {
"base": "Task",
"class": "Sequence",
"language": "GDScript",
"path": "res://BehaviorTree/Composites/Sequence.gd"
}, {
"base": "Task",
"class": "StatusSequence",
"language": "GDScript",
"path": "res://Tests/Leaves/StatusSequence.gd"
}, {
"base": "StatusSequence",
"class": "StoF",
"language": "GDScript",
"path": "res://Tests/Leaves/s-f.gd"
}, {
"base": "Task",
"class": "Succeed",
"language": "GDScript",
"path": "res://Tests/Leaves/Succeed.gd"
}, {
"base": "Node",
"class": "Task",
"language": "GDScript",
"path": "res://BehaviorTree/Task.gd"
}, {
"base": "Task",
"class": "UntilFail",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/UntilFail.gd"
}, {
"base": "Task",
"class": "UntilSuccess",
"language": "GDScript",
"path": "res://BehaviorTree/Decorators/UntilSuccess.gd"
} ]
_global_script_class_icons={
"AlwaysFail": "res://icons/always-fail.png",
"AlwaysSucceed": "res://icons/always-succeed.png",
"BehaviorTree": "",
"Call": "",
"CallMyAgent": "",
"DynamicGuardSelector": "res://icons/selector.png",
"Fail": "",
"FtoS": "",
"Invert": "res://icons/invert.png",
"Leaf": "",
"Limit": "res://icons/limit.png",
"LimitCheck": "",
"Parallel": "res://icons/parallel.png",
"RandomSelector": "res://icons/random-selector.png",
"RandomSequence": "res://icons/random-sequence.png",
"Repeat": "res://icons/repeat.png",
"RepeatChild": "",
"Selector": "res://icons/selector.png",
"Sequence": "res://icons/sequence.png",
"StatusSequence": "",
"StoF": "",
"Succeed": "",
"Task": "",
"UntilFail": "res://icons/until-fail.png",
"UntilSuccess": "res://icons/until-success.png"
}

[application]

config/name="suburban-commando"
run/main_scene="res://level/Main.tscn"
config/icon="res://icon.png"

[editor_plugins]

enabled=PoolStringArray(  )

[input]

cam_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777232,"unicode":0,"echo":false,"script":null)
 ]
}
cam_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777234,"unicode":0,"echo":false,"script":null)
 ]
}
cam_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777233,"unicode":0,"echo":false,"script":null)
 ]
}
cam_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777231,"unicode":0,"echo":false,"script":null)
 ]
}
cam_zoom_in={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":90,"unicode":0,"echo":false,"script":null)
 ]
}
cam_zoom_out={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":88,"unicode":0,"echo":false,"script":null)
 ]
}
move_forward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
move_back={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
strafe_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
strafe_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":32,"unicode":0,"echo":false,"script":null)
 ]
}
fire_primary={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
 ]
}

[layer_names]

3d_physics/layer_1="Environment"
3d_physics/layer_2="Entities"
3d_physics/layer_3="Items"
3d_physics/layer_4="Floor"
3d_physics/layer_5="Sensors"
3d_physics/layer_6="Enemies"
3d_physics/layer_7="Players"

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
